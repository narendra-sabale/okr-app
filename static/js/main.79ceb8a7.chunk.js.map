{"version":3,"sources":["Components/Objective.js","Components/CategoryFilter.js","Components/Header.js","Containers/Main.js","Constants/Constants.js","index.js"],"names":["Objective","title","memo","CategoryFilter","showSelector","activeCategory","categoryList","handleCategorySelector","className","value","onChange","e","target","map","category","index","Header","props","App","useState","isLoading","setIsLoading","data","setData","filteredData","setFilteredData","setActiveCategory","setCategoryList","errorMsg","setErrorMsg","useEffect","fetch","then","res","json","processData","catch","error","getFilteredData","filter","obj","output","reduce","acc","curr","includes","push","parent_objective_id","length","children","toggleView","event","childrenEle","parentNode","style","display","transform","top","parent","onClick","child","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ceb8a7.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst Objective = ({ title }) => {\n  return (\n    <div>{title}</div>\n  )\n}\n\nexport default memo(Objective)","import React, { memo } from 'react';\nimport './Styles/CategoryFilter.scss'\n\nconst CategoryFilter = ({ showSelector, activeCategory, categoryList, handleCategorySelector }) => {\n\n  const handleChart = (e) => {\n    // console.log(\"VAL :: \", e.target.value)\n    const activeCategory = e.target.value\n    handleCategorySelector(activeCategory)\n  }\n\n  return(\n    showSelector \n      ? null \n      : <div className=\"catogory-selector\">\n          <select value={activeCategory} onChange={handleChart}>\n            {\n              categoryList.map((category, index) => \n                <option key={`${category}_${index}`}>\n                  {category}\n                </option>\n              )\n            }\n          </select>\n        </div>\n  )\n}\n\nexport default memo(CategoryFilter)","import React, { memo } from 'react';\nimport CategoryFilter from './CategoryFilter'\nimport './Styles/Header.scss'\n\nconst Header = (props) => {\n  return (\n    <div className='headerContainer'>\n      <div className=\"appName\">OKR App</div>\n      <CategoryFilter {...props}/>\n    </div>\n  )\n}\n\nexport default memo(Header)","\nimport React, { useEffect, useState } from 'react';\n// import data1 from '../Utils/dummyData'\nimport Objective from '../Components/Objective'\nimport Header from '../Components/Header'\nimport { URL } from '../Constants/Constants'\nimport './Styles/Main.scss'\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([])\n  const [activeCategory, setActiveCategory] = useState('')\n  const [categoryList, setCategoryList] = useState([])\n  const [errorMsg, setErrorMsg] = useState(null)\n\n  useEffect(()=>{\n    fetch(URL)\n      .then((res)=>res.json())\n      .then(data=>{\n        // console.log(\"DATA : \", data)\n        processData(data.data)\n        setIsLoading(false)\n      })\n      .catch((error)=>{\n        // console.log(\"ERR : \", error)\n        setErrorMsg('Please try again')\n        setIsLoading(false)\n      })\n    // processData(data1)\n  }, [])\n\n  const getFilteredData = (data, category) => data.filter(obj => obj.category === category)\n  \n  const processData = (data) => {\n    const categoryList = []\n    const output = data.reduce((acc, curr)=>{\n      if(!categoryList.includes(curr.category)){\n        categoryList.push(curr.category)\n      }\n      if(!curr.parent_objective_id){\n        curr.children = []\n        acc.push(curr)\n      } else {\n        acc[acc.length-1].children.push(curr)\n      }\n      return acc\n    }, [])\n    \n    const activeCategory = categoryList.length ? categoryList[0] : ''\n    const filteredData = activeCategory ? getFilteredData(output, activeCategory) : []\n   \n    setData(output)\n    setCategoryList(categoryList)\n    setActiveCategory(activeCategory)\n    setFilteredData(filteredData)\n  }\n\n  const handleCategorySelector = (category) => {\n    const filteredData = getFilteredData(data, category)\n    setActiveCategory(category)\n    setFilteredData(filteredData)\n  }\n\n  const toggleView = (event) => {\n    // console.log(\"EVENT :: \",event, event.target, event.target.parentNode.parentNode.children, event.currentTarget.children)\n    \n    let childrenEle = event.target.parentNode.parentNode.children\n    if(childrenEle.length >= 2) {\n      if(childrenEle[1].style.display === \"none\") {\n        childrenEle[1].style.display = \"block\"\n        event.target.style.transform = 'rotate(0deg)'\n        event.target.style.top = '5px'\n      } else {\n        childrenEle[1].style.display = \"none\"\n        event.target.style.transform = 'rotate(-90deg)'\n        event.target.style.top = '0px'\n      }\n    }\n  }\n\n  return (\n    <div className=\"mainContainer\">\n      <Header \n        showSelector={isLoading || errorMsg}\n        activeCategory={activeCategory}\n        categoryList={categoryList}\n        handleCategorySelector={handleCategorySelector}/>\n      {\n        isLoading \n          ? <div className=\"loader\">Loading...</div>\n          : errorMsg \n            ? <div className=\"error\">{errorMsg}</div>\n            : <div className=\"bodyContainer\">\n                <div className=\"container\">\n                  {\n                    filteredData.map((parent)=>{\n                      return (\n                        <div key={parent.id} className=\"parentWrapper\">\n                          <div className=\"parent\">\n                            <div className=\"arrow\" onClick={toggleView}></div>\n                            <Objective title={parent.title}/>\n                          </div>\n                          <div className=\"childrenWrapper\">\n                            {\n                              parent.children && parent.children.map((child)=>{\n                                return(\n                                  <div className=\"children\" key={child.id}>\n                                    <div className=\"dot\"></div>\n                                    <Objective title={child.title}/>\n                                  </div>\n                                )\n                              })\n                            }\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n      }\n      {/* {\n        true && <div className=\"model\"></div>\n      } */}\n    </div>\n  );\n}\n\nexport default App;\n"," const URL = 'https://okrcentral.github.io/sample-okrs/db.json'\n const CATEGORY_VALUES = ['Company', 'Sales']\n\n export { URL, CATEGORY_VALUES }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Containers/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}